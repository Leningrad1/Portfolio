// Generated by Dagger (https://dagger.dev).
package com.example.headhunterapp.data.repository;

import com.example.headhunterapp.data.db.UserDao;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class RepositoryModule_ProvideRepositoryFactory implements Factory<Repository> {
  private final Provider<UserDao> userDaoProvider;

  public RepositoryModule_ProvideRepositoryFactory(Provider<UserDao> userDaoProvider) {
    this.userDaoProvider = userDaoProvider;
  }

  @Override
  public Repository get() {
    return provideRepository(userDaoProvider.get());
  }

  public static RepositoryModule_ProvideRepositoryFactory create(
      Provider<UserDao> userDaoProvider) {
    return new RepositoryModule_ProvideRepositoryFactory(userDaoProvider);
  }

  public static Repository provideRepository(UserDao userDao) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.provideRepository(userDao));
  }
}
