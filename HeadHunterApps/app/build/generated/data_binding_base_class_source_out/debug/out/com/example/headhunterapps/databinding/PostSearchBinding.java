// Generated by view binder compiler. Do not edit!
package com.example.headhunterapps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.headhunterapps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PostSearchBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardSearch;

  @NonNull
  public final TextView cityJob;

  @NonNull
  public final TextView experienceWork;

  @NonNull
  public final ImageView iconWork;

  @NonNull
  public final ImageView imageWork;

  @NonNull
  public final ImageView likeFavourites;

  @NonNull
  public final TextView moneyJob;

  @NonNull
  public final TextView nameJob;

  @NonNull
  public final TextView nameWork;

  @NonNull
  public final AppCompatButton nextButton;

  @NonNull
  public final TextView peopleLookTitle1;

  @NonNull
  public final TextView publicWork;

  private PostSearchBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardSearch,
      @NonNull TextView cityJob, @NonNull TextView experienceWork, @NonNull ImageView iconWork,
      @NonNull ImageView imageWork, @NonNull ImageView likeFavourites, @NonNull TextView moneyJob,
      @NonNull TextView nameJob, @NonNull TextView nameWork, @NonNull AppCompatButton nextButton,
      @NonNull TextView peopleLookTitle1, @NonNull TextView publicWork) {
    this.rootView = rootView;
    this.cardSearch = cardSearch;
    this.cityJob = cityJob;
    this.experienceWork = experienceWork;
    this.iconWork = iconWork;
    this.imageWork = imageWork;
    this.likeFavourites = likeFavourites;
    this.moneyJob = moneyJob;
    this.nameJob = nameJob;
    this.nameWork = nameWork;
    this.nextButton = nextButton;
    this.peopleLookTitle1 = peopleLookTitle1;
    this.publicWork = publicWork;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PostSearchBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PostSearchBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.post_search, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PostSearchBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardSearch;
      CardView cardSearch = ViewBindings.findChildViewById(rootView, id);
      if (cardSearch == null) {
        break missingId;
      }

      id = R.id.cityJob;
      TextView cityJob = ViewBindings.findChildViewById(rootView, id);
      if (cityJob == null) {
        break missingId;
      }

      id = R.id.experienceWork;
      TextView experienceWork = ViewBindings.findChildViewById(rootView, id);
      if (experienceWork == null) {
        break missingId;
      }

      id = R.id.icon_work;
      ImageView iconWork = ViewBindings.findChildViewById(rootView, id);
      if (iconWork == null) {
        break missingId;
      }

      id = R.id.imageWork;
      ImageView imageWork = ViewBindings.findChildViewById(rootView, id);
      if (imageWork == null) {
        break missingId;
      }

      id = R.id.likeFavourites;
      ImageView likeFavourites = ViewBindings.findChildViewById(rootView, id);
      if (likeFavourites == null) {
        break missingId;
      }

      id = R.id.moneyJob;
      TextView moneyJob = ViewBindings.findChildViewById(rootView, id);
      if (moneyJob == null) {
        break missingId;
      }

      id = R.id.nameJob;
      TextView nameJob = ViewBindings.findChildViewById(rootView, id);
      if (nameJob == null) {
        break missingId;
      }

      id = R.id.nameWork;
      TextView nameWork = ViewBindings.findChildViewById(rootView, id);
      if (nameWork == null) {
        break missingId;
      }

      id = R.id.nextButton;
      AppCompatButton nextButton = ViewBindings.findChildViewById(rootView, id);
      if (nextButton == null) {
        break missingId;
      }

      id = R.id.peopleLookTitle1;
      TextView peopleLookTitle1 = ViewBindings.findChildViewById(rootView, id);
      if (peopleLookTitle1 == null) {
        break missingId;
      }

      id = R.id.publicWork;
      TextView publicWork = ViewBindings.findChildViewById(rootView, id);
      if (publicWork == null) {
        break missingId;
      }

      return new PostSearchBinding((ConstraintLayout) rootView, cardSearch, cityJob, experienceWork,
          iconWork, imageWork, likeFavourites, moneyJob, nameJob, nameWork, nextButton,
          peopleLookTitle1, publicWork);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
