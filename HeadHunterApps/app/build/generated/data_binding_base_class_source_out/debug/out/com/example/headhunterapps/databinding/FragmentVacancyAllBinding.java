// Generated by view binder compiler. Do not edit!
package com.example.headhunterapps.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.headhunterapps.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentVacancyAllBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final CardView cardView2;

  @NonNull
  public final CardView cardView3;

  @NonNull
  public final CardView cardView4;

  @NonNull
  public final ImageView favourites;

  @NonNull
  public final ImageView home;

  @NonNull
  public final ImageView imageBack;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final ImageView massage;

  @NonNull
  public final ImageView profile;

  @NonNull
  public final RecyclerView recyclerViewAllVacancy;

  @NonNull
  public final ImageView redTab;

  @NonNull
  public final ImageView searchFun;

  @NonNull
  public final ImageView searchLiteMenu;

  @NonNull
  public final ImageView send;

  @NonNull
  public final ImageView tab;

  @NonNull
  public final TextView textFilterVacancy;

  @NonNull
  public final TextView textIdVacancy;

  @NonNull
  public final TextView textRed;

  @NonNull
  public final EditText textSearch;

  private FragmentVacancyAllBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull CardView cardView2, @NonNull CardView cardView3, @NonNull CardView cardView4,
      @NonNull ImageView favourites, @NonNull ImageView home, @NonNull ImageView imageBack,
      @NonNull LinearLayout linearLayout2, @NonNull ImageView massage, @NonNull ImageView profile,
      @NonNull RecyclerView recyclerViewAllVacancy, @NonNull ImageView redTab,
      @NonNull ImageView searchFun, @NonNull ImageView searchLiteMenu, @NonNull ImageView send,
      @NonNull ImageView tab, @NonNull TextView textFilterVacancy, @NonNull TextView textIdVacancy,
      @NonNull TextView textRed, @NonNull EditText textSearch) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.cardView2 = cardView2;
    this.cardView3 = cardView3;
    this.cardView4 = cardView4;
    this.favourites = favourites;
    this.home = home;
    this.imageBack = imageBack;
    this.linearLayout2 = linearLayout2;
    this.massage = massage;
    this.profile = profile;
    this.recyclerViewAllVacancy = recyclerViewAllVacancy;
    this.redTab = redTab;
    this.searchFun = searchFun;
    this.searchLiteMenu = searchLiteMenu;
    this.send = send;
    this.tab = tab;
    this.textFilterVacancy = textFilterVacancy;
    this.textIdVacancy = textIdVacancy;
    this.textRed = textRed;
    this.textSearch = textSearch;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVacancyAllBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVacancyAllBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_vacancy_all, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVacancyAllBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.cardView2;
      CardView cardView2 = ViewBindings.findChildViewById(rootView, id);
      if (cardView2 == null) {
        break missingId;
      }

      id = R.id.cardView3;
      CardView cardView3 = ViewBindings.findChildViewById(rootView, id);
      if (cardView3 == null) {
        break missingId;
      }

      id = R.id.cardView4;
      CardView cardView4 = ViewBindings.findChildViewById(rootView, id);
      if (cardView4 == null) {
        break missingId;
      }

      id = R.id.favourites;
      ImageView favourites = ViewBindings.findChildViewById(rootView, id);
      if (favourites == null) {
        break missingId;
      }

      id = R.id.home;
      ImageView home = ViewBindings.findChildViewById(rootView, id);
      if (home == null) {
        break missingId;
      }

      id = R.id.image_back;
      ImageView imageBack = ViewBindings.findChildViewById(rootView, id);
      if (imageBack == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.massage;
      ImageView massage = ViewBindings.findChildViewById(rootView, id);
      if (massage == null) {
        break missingId;
      }

      id = R.id.profile;
      ImageView profile = ViewBindings.findChildViewById(rootView, id);
      if (profile == null) {
        break missingId;
      }

      id = R.id.recycler_view_all_vacancy;
      RecyclerView recyclerViewAllVacancy = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewAllVacancy == null) {
        break missingId;
      }

      id = R.id.red_tab;
      ImageView redTab = ViewBindings.findChildViewById(rootView, id);
      if (redTab == null) {
        break missingId;
      }

      id = R.id.search_fun;
      ImageView searchFun = ViewBindings.findChildViewById(rootView, id);
      if (searchFun == null) {
        break missingId;
      }

      id = R.id.search_lite_menu;
      ImageView searchLiteMenu = ViewBindings.findChildViewById(rootView, id);
      if (searchLiteMenu == null) {
        break missingId;
      }

      id = R.id.send;
      ImageView send = ViewBindings.findChildViewById(rootView, id);
      if (send == null) {
        break missingId;
      }

      id = R.id.tab;
      ImageView tab = ViewBindings.findChildViewById(rootView, id);
      if (tab == null) {
        break missingId;
      }

      id = R.id.text_filter_vacancy;
      TextView textFilterVacancy = ViewBindings.findChildViewById(rootView, id);
      if (textFilterVacancy == null) {
        break missingId;
      }

      id = R.id.text_id_vacancy;
      TextView textIdVacancy = ViewBindings.findChildViewById(rootView, id);
      if (textIdVacancy == null) {
        break missingId;
      }

      id = R.id.text_red;
      TextView textRed = ViewBindings.findChildViewById(rootView, id);
      if (textRed == null) {
        break missingId;
      }

      id = R.id.text_search;
      EditText textSearch = ViewBindings.findChildViewById(rootView, id);
      if (textSearch == null) {
        break missingId;
      }

      return new FragmentVacancyAllBinding((ConstraintLayout) rootView, cardView, cardView2,
          cardView3, cardView4, favourites, home, imageBack, linearLayout2, massage, profile,
          recyclerViewAllVacancy, redTab, searchFun, searchLiteMenu, send, tab, textFilterVacancy,
          textIdVacancy, textRed, textSearch);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
